# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/bacagine/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="bira"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


#echo " ██████╗  █████╗  ██████╗ █████╗  ██████╗ ██╗███╗   ██╗███████╗ "
#echo " ██╔══██╗██╔══██╗██╔════╝██╔══██╗██╔════╝ ██║████╗  ██║██╔════╝ "
#echo " ██████╔╝███████║██║     ███████║██║  ███╗██║██╔██╗ ██║█████╗   "
#echo " ██╔══██╗██╔══██║██║     ██╔══██║██║   ██║██║██║╚██╗██║██╔══╝   "
#echo " ██████╔╝██║  ██║╚██████╗██║  ██║╚██████╔╝██║██║ ╚████║███████╗ "
#echo " ╚═════╝ ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝╚═╝  ╚═══╝╚══════╝ "

#echo "        ______________________________________________________________ "
#echo ""
#echo "        ██████╗ ███████╗██████╗ ██╗ █████╗ ███╗   ██╗     ██╗ ██████╗  "
#echo "        ██╔══██╗██╔════╝██╔══██╗██║██╔══██╗████╗  ██║    ███║██╔═████╗ "
#echo "        ██║  ██║█████╗  ██████╔╝██║███████║██╔██╗ ██║    ╚██║██║██╔██║ "
#echo "        ██║  ██║██╔══╝  ██╔══██╗██║██╔══██║██║╚██╗██║     ██║████╔╝██║ "
#echo "        ██████╔╝███████╗██████╔╝██║██║  ██║██║ ╚████║     ██║╚██████╔╝ "
#echo "        ╚═════╝ ╚══════╝╚═════╝ ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝     ╚═╝ ╚═════╝  "
#echo "        _______________________Gustavo Bacagine_______________________ "

#http://www.patorjk.com/software/taag/#p=display&f=Graffiti&t=

echo "        Porque Deus amou o mundo de tal maneira que deu o seu Filho "
echo "        unigênito, para que todo aquele que nele crê não pereça,    "
echo "        mas tenha a vida eterna.                                    "        
echo ""
echo "                             João 3:16                              "

# Exports
####################################################################################
export PATH="$PATH:/opt/netbeans/bin/"
export PATH="$PATH:/home/bacagine/.local/bin"
export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_241

# This is the location where GSRC packages are installed
GSRC=$HOME/gnu

# PATH gives the locations of executable files (program binary files).
export ORIG_PATH=$PATH
export PATH=$GSRC/bin${PATH:+:$PATH}

# LD_LIBRARY_PATH gives the locations of shared library files. Note 
# that if a given library is installed both via GSRC and via your
# system's package manager, there may be unexpected behavior due to
# version conflicts.
export ORIG_LD_LIBRARY_PATH=$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$GSRC/lib64:$GSRC/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}

# INFOPATH gives the locations of `info' documentation files.
export ORIG_INFOPATH=$INFOPATH
export INFOPATH=$GSRC/share/info:$GSRC/info${INFOPATH:+:$INFOPATH}

# MANPATH gives the locations of `man' documentation files.
export ORIG_MANPATH=$MANPATH
export MANPATH=$GSRC/share/man:$MANPATH

# PKG_CONFIG_PATH gives the locations of pkg-config package 
# descriptions. Note that, like LD_LIBRARY_PATH, use of this variable 
# may lead to unexpected behavior.
export ORIG_PKG_CONFIG_PATH=$PKG_CONFIG_PATH
export PKG_CONFIG_PATH=$GSRC/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}

# PYTHONPATH gives the locations of Python libraries. You should adjust 
# this to reflect the versions of Python that you have installed on 
# your system.
export ORIG_PYTHONPATH=$PYTHONPATH
export PYTHONPATH=$GSRC/lib/python2.7/site-packages/:$GSRC/lib/python3.7/site-packages${PYTHONPATH:+:$PYTHONPATH}
##################################################################################################################

# Aliases
#################################
alias please="sudo"
alias apt="sudo apt"
alias apt-get="sudo apt-get"
alias aptitude="sudo aptitude"
alias c="clear"
alias root="sudo -i"
alias su="sudo -i"
alias shutdown="sudo shutdown"
alias open_java="/usr/lib/jvm/java-11-openjdk-amd64/bin/java"
alias open_javac="/usr/lib/jvm/java-11-openjdk-amd64/bin/javac"
alias limpa=clear
alias cls=clear
#alias wget="wget -c"

stty -ixon

#neofetch
#figlet Bacagine | boxes

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/bacagine/anaconda2/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/bacagine/anaconda2/etc/profile.d/conda.sh" ]; then
        . "/home/bacagine/anaconda2/etc/profile.d/conda.sh"
    else
        export PATH="/home/bacagine/anaconda2/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
#conda config --set auto_activate_base false
